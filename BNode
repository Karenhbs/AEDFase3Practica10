package btree;

import java.util.ArrayList;

public class BNode<E extends Comparable<E>> {
    protected static int idCounter = 0; // Contador global de nodos
    protected int idNode; // Identificador único del nodo

    protected ArrayList<E> keys;
    protected ArrayList<BNode<E>> childs;
    protected int count;

    public BNode(int n) {
        this.keys = new ArrayList<E>(n);
        this.childs = new ArrayList<BNode<E>>(n);
        this.count = 0;
        for (int i = 0; i < n; i++) {
            this.keys.add(null);
            this.childs.add(null);
        }
        this.idNode = idCounter++; // Asignar ID único al nodo y aumentar el contador
    }

    // Check if the current node is full
    public boolean nodeFull(int n) {
        return count == n;
    }

    // Check if the current node is empty
    public boolean nodeEmpty(int n) {
        return count < (n - 1) / 2;
    }

    public boolean searchNode(E x, int pos[]) {
        pos[0] = 0;
        while (pos[0] < count && keys.get(pos[0]).compareTo(x) < 0)
            pos[0]++;
        if (pos[0] < count && keys.get(pos[0]).equals(x))
            return true;
        else
            return false;
    }

    // Muestra el contenido del nodo con su ID
    public String toString() {
        StringBuilder str = new StringBuilder();
        str.append("Nodo ").append(idNode).append(": (");
        for (int i = 0; i < count; i++) {
            str.append(keys.get(i));
            if (i < count - 1)
                str.append(", ");
        }
        str.append(")");
        return str.toString();
    }

    public void add(E x, int n) {
        if (!nodeFull(n)) {
            keys.set(count, x);
            count++;
        }
    }

    // Getter para idNode si lo necesitas externamente
    public int getIdNode() {
        return idNode;
    }

    private int id = -1;
    private int parentId = -1;

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public int getParentId() {
        return parentId;
    }

    public void setParentId(int parentId) {
        this.parentId = parentId;
    }

}
